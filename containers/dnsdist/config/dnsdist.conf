-- udp/tcp dns listening
setLocal("0.0.0.0:53", {})

-- Local CoreDNS
newServer({
  address = "10.20.20.3",
  pool = "coredns",
  checkName = "gateway.zinn.tech"
})

-- Local PiHole
newServer({
  address = "10.10.0.6",
  pool = "pihole",
  healthCheckMode = "lazy",
  checkInterval = 1800,
  maxCheckFailures = 3,
  lazyHealthCheckFailedInterval = 30,
  rise = 2,
  lazyHealthCheckThreshold = 30,
  lazyHealthCheckSampleSize = 100,
  lazyHealthCheckMinSampleCount = 10,
  lazyHealthCheckMode = 'TimeoutOnly',
  useClientSubnet = true
})
-- PiHole will be given requester IP
setECSSourcePrefixV4(32)

-- CloudFlare DNS over TLS
newServer({
  address = "1.1.1.1:853",
  tls = "openssl",
  subjectName = "cloudflare-dns.com",
  validateCertificates = true,
  checkInterval = 10,
  checkTimeout = 2000,
  pool = "cloudflare"
})
newServer({
  address = "1.0.0.1:853",
  tls = "openssl",
  subjectName = "cloudflare-dns.com",
  validateCertificates = true,
  checkInterval = 10,
  checkTimeout = 2000,
  pool = "cloudflare"
})

-- Enable caching
pc = newPacketCache(10000, {
  maxTTL = 86400,
  minTTL = 0,
  temporaryFailureTTL = 60,
  staleTTL = 60,
  dontAge = false
})
getPool(""):setCache(pc)

-- Request logging, uncomment to log DNS requests/responses to stdout
-- addAction(AllRule(), LogAction("", false, false, true, false, false))
-- addResponseAction(AllRule(), LogResponseAction("", false, true, false, false))

-- Routing rules
addAction("192.168.1.0/24", PoolAction("cloudflare"))     -- iot vlan
addAction("192.168.2.0/24", PoolAction("cloudflare"))     -- guest vlan
addAction("192.168.0.0/16", DropAction())                 -- stop processing

addAction('zinn.ca', PoolAction('coredns'))
addAction('zinn.tech', PoolAction('coredns'))
addAction('10.in-addr.arpa', PoolAction('coredns'))

addAction("10.0.0.0/16", PoolAction("cloudflare"))  -- lan / services
addAction("10.10.0.0/16", PoolAction("pihole"))  -- servers vlan
addAction("10.11.0.0/16", PoolAction("pihole"))  -- homelab vlan
addAction("10.12.0.0/16", PoolAction("pihole"))  -- staging vlan
addAction("10.20.0.0/16", PoolAction("pihole"))  -- trusted vlan
